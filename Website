<artifact>
<title>Interactive Learning Platform HTML</title>
<type>text/html</type>
undefined
<content><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Learning Platform</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/luxon/2.3.1/luxon.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #1e3a8a;
            --primary-light: #2563eb;
            --secondary: #3b82f6;
            --background: #f8fafc;
            --card-bg: #ffffff;
            --text: #1e293b;
            --text-light: #64748b;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background-color: var(--background);
            min-height: 100vh;
            color: var(--text);
        }

        header {
            background-color: var(--primary);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            padding: 1rem;
            color: white;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .user-info {
            display: flex;
            gap: 1.5rem;
            align-items: center;
        }

        .user-stat {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: rgba(255, 255, 255, 0.1);
            padding: 0.5rem 1rem;
            border-radius: 1rem;
            transition: all 0.3s ease;
        }

        .user-stat:hover {
            background: rgba(255, 255, 255, 0.2);
        }

        .exp-container {
            width: 100px;
            height: 4px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 2px;
            margin-top: 4px;
        }

        .exp-fill {
            height: 100%;
            background: #4ade80;
            border-radius: 2px;
            transition: width 0.3s ease;
        }

        .main-content {
            padding: 2rem 0;
        }

        .class-card {
            background-color: var(--card-bg);
            border-radius: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.3s ease;
        }

        .class-card:hover {
            transform: translateY(-2px);
        }

        .class-header {
            padding: 1.5rem;
            cursor: pointer;
        }

        .class-info {
            margin-bottom: 1rem;
        }

        .progress-bar {
            width: 100%;
            height: 0.5rem;
            background-color: #e5e7eb;
            border-radius: 9999px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background-color: var(--secondary);
            transition: width 0.3s ease;
        }

        .units-container {
            border-top: 1px solid #e5e7eb;
            display: none;
        }

        .unit {
            padding: 1.5rem;
            border-bottom: 1px solid #e5e7eb;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .unit:hover {
            background-color: #f8fafc;
        }

        .homework-section {
            padding: 1.5rem;
            border-top: 1px solid #e5e7eb;
        }

        .homework-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            background: #f8fafc;
            border-radius: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .due-date {
            color: var(--text-light);
            font-size: 0.875rem;
        }

        .quiz-page {
            display: none;
            padding: 2rem;
        }

        .quiz-container {
            background-color: var(--card-bg);
            border-radius: 1rem;
            padding: 2rem;
            max-width: 800px;
            margin: 0 auto;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

        .quiz-question {
            margin-bottom: 2rem;
            padding: 1.5rem;
            background-color: #f8fafc;
            border-radius: 1rem;
        }

        .rating-buttons {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .rating-btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 0.5rem;
            color: white;
            cursor: pointer;
            transition: all 0.2s;
            font-weight: 500;
        }

        .rating-btn:hover {
            transform: translateY(-1px);
        }

        .btn-not-yet { background-color: #ef4444; }
        .btn-almost { background-color: #eab308; }
        .btn-perfect { background-color: #22c55e; }

        .explanation {
            margin-top: 1rem;
            padding: 1rem;
            background: #f0f9ff;
            border-left: 4px solid var(--secondary);
            border-radius: 0.5rem;
        }

        .hidden { display: none; }

        .flame-icon {
            color: #f97316;
            font-size: 1.2rem;
        }

        .question-navigator {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 2rem;
        }

        .nav-btn {
            padding: 0.5rem 1rem;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.2s;
        }

        .nav-btn:hover {
            background: var(--primary-light);
        }

        .nav-btn:disabled {
            background: var(--text-light);
            cursor: not-allowed;
        }

        .question-progress {
            font-size: 0.875rem;
            color: var(--text-light);
        }
    </style>
</head>
<body>
    <header>
        <div class="container header-content">
            <h1>Learning Platform</h1>
            <div class="user-info">
                <div class="user-stat">
                    <span class="flame-icon">üî•</span>
                    <span>7 day streak</span>
                </div>
                <div class="user-stat">
                    <span>üèÜ</span>
                    <span>Level 15</span>
                    <div class="exp-container">
                        <div class="exp-fill" style="width: 75%"></div>
                    </div>
                </div>
                <div class="user-stat">
                    <span>üë§</span>
                    <span>JohnDoe</span>
                </div>
            </div>
        </div>
    </header>

    <main class="container main-content" id="mainContent">
        <div class="class-card">
            <div class="class-header" onclick="toggleClass(1)">
                <div class="class-info">
                    <h2>Mathematics</h2>
                    <p class="last-revised">Last revised: <span id="lastRevised"></span></p>
                </div>
                <div class="progress-stats">
                    <div class="progress-text">
                        <span>Overall Mastery: 75%</span>
                        <span>90/120 cards completed</span>
                    </div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: 75%"></div>
                    </div>
                </div>
            </div>
            <div class="units-container" id="units1">
                <!-- Units will be dynamically populated -->
            </div>
            <div class="homework-section">
                <h3>Homework Assignments</h3>
                <div class="homework-item">
                    <div>
                        <h4>Algebra Practice Set</h4>
                        <p>Complete exercises 1-10</p>
                    </div>
                    <div class="due-date">Due: Nov 15, 2024</div>
                </div>
                <div class="homework-item">
                    <div>
                        <h4>Linear Equations Quiz</h4>
                        <p>Online assessment</p>
                    </div>
                    <div class="due-date">Due: Nov 17, 2024</div>
                </div>
            </div>
        </div>
    </main>

    <div id="quizPage" class="quiz-page">
        <div class="quiz-container">
            <h2>Unit Quiz</h2>
            <div id="quizContent"></div>
            <div class="question-navigator">
                <button id="prevQuestion" class="nav-btn" onclick="navigateQuestion(-1)" disabled>Previous</button>
                <span class="question-progress">Question <span id="currentQuestion">1</span> of 10</span>
                <button id="nextQuestion" class="nav-btn" onclick="navigateQuestion(1)">Next</button>
            </div>
            <button onclick="returnToMain()" class="nav-btn" style="margin-top: 2rem;">Return to Main Page</button>
        </div>
    </div>

    <script>
        let currentExp = 0;
        let currentLevel = 15;
        const expPerLevel = 1000;
        let currentQuestionIndex = 0;
        let quizQuestions = [];

        const mockQuestions = {
            "1.1": [
                {
                    id: 1,
                    question: "Solve for x: 2x + 5 = 13",
                    answer: "x = 4",
                    explanation: "Let's break this down step by step:\n1. First, subtract 5 from both sides: 2x = 8\n2. Then divide both sides by 2: x = 4",
                    attempts: 0
                },
                // Add more questions with explanations
            ],
            "1.2": [
                {
                    id: 11,
                    question: "What is the slope-intercept form?",
                    answer: "y = mx + b",
                    explanation: "The slope-intercept form y = mx + b is used because:\n- m represents the slope (rate of change)\n- b represents the y-intercept (where the line crosses the y-axis)",
                    attempts: 0
                },
                // Add more questions with explanations
            ]
        };

        function initializePage() {
            const lastRevised = luxon.DateTime.now().minus({ days: 2 }).toLocaleString(luxon.DateTime.DATE_MED);
            document.getElementById('lastRevised').textContent = lastRevised;

            const unitsContainer = document.getElementById('units1');
            units.forEach(unit => {
                const unitElement = document.createElement('div');
                unitElement.className = 'unit';
                unitElement.innerHTML = `
                    <h3>Unit ${unit.id}: ${unit.name}</h3>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: ${unit.mastery}%"></div>
                    </div>
                `;
                unitElement.onclick = () => startQuiz(unit.id);
                unitsContainer.appendChild(unitElement);
            });

            updateExp();
        }

        function updateExp() {
            const expFill = document.querySelector('.exp-fill');
            const expPercentage = (currentExp % expPerLevel) / expPerLevel * 100;
            expFill.style.width = `${expPercentage}%`;
        }

        function addExp(amount) {
            currentExp += amount;
            while (currentExp >= expPerLevel) {
                currentExp -= expPerLevel;
                currentLevel++;
                alert(`Congratulations! You've reached level ${currentLevel}!`);
            }
            updateExp();
        }

        function startQuiz(unitId) {
            currentQuestionIndex = 0;
            quizQuestions = getRandomQuestions(unitId);
            showCurrentQuestion();
            document.getElementById('mainContent').style.display = 'none';
            document.getElementById('quizPage').style.display = 'block';
        }

        function showCurrentQuestion() {
            const quizContent = document.getElementById('quizContent');
            const question = quizQuestions[currentQuestionIndex];
            
            quizContent.innerHTML = `
                <div class="quiz-question">
                    <h3>Question ${currentQuestionIndex + 1}</h3>
                    <p>${question.question}</p>
                    <button onclick="toggleAnswer()" class="rating-btn">Show Answer</button>
                    <div id="answerContent" class="hidden">
                        <p>${question.answer}</p>
                        <div class="rating-buttons">
                            <button class="rating-btn btn-not-yet" onclick="rateAnswer('not-yet')">Not Yet</button>
                            <button class="rating-btn btn-almost" onclick="rateAnswer('almost')">Almost</button>
                            <button class="rating-btn btn-perfect" onclick="rateAnswer('perfect')">Perfect</button>
                        </div>
                    </div>
                </div>
            `;

            document.getElementById('currentQuestion').textContent = currentQuestionIndex + 1;
            document.getElementById('prevQuestion').disabled = currentQuestionIndex === 0;
            document.getElementById('nextQuestion').disabled = currentQuestionIndex === quizQuestions.length - 1;
        }

        function toggleAnswer() {
            const answerContent = document.getElementById('answerContent');
            answerContent.classList.toggle('hidden');
        }

        function rateAnswer(rating) {
            const question = quizQuestions[currentQuestionIndex];
            if (rating === 'perfect') {
                addExp(100);
            } else if (rating === 'almost') {
                addExp(50);
            }

            if (rating === 'not-yet') {
                const answerContent = document.getElementById('answerContent');
                answerContent.innerHTML += `
                    <div class="explanation">
                        <h4>Detailed Explanation:</h4>
                        <p</content>
</artifact>
